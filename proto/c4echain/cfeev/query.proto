syntax = "proto3";
package chain4energy.c4echain.cfeev;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "c4echain/cfeev/params.proto";
// this line is used by starport scaffolding # 1
import "c4echain/cfeev/energy_transfer.proto";
import "c4echain/cfeev/energy_transfer_offer.proto";

option go_package = "github.com/chain4energy/c4e-chain/x/cfeev/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/c4e/ev/v1beta1/params";
  }
  // Queries a EnergyTransferOffer by id.
	rpc EnergyTransferOffer(QueryEnergyTransferOfferRequest) returns (QueryEnergyTransferOfferResponse) {
		option (google.api.http).get = "/c4e/ev/v1beta1/energy_transfer_offer/{id}";
	}

	// Queries a list of EnergyTransferOffer items.
	rpc AllEnergyTransferOffers(QueryAllEnergyTransferOffersRequest) returns (QueryAllEnergyTransferOfferResponse) {
		option (google.api.http).get = "/c4e/ev/v1beta1/energy_transfer_offers";
	}

// Queries a EnergyTransfer by id.
	rpc EnergyTransfer(QueryEnergyTransferRequest) returns (QueryEnergyTransferResponse) {
		option (google.api.http).get = "/c4e/ev/v1beta1/energy_transfer/{id}";
	}

	// Queries a list of EnergyTransfer items.
	rpc AllEnergyTransfers(QueryAllEnergyTransfersRequest) returns (QueryAllEnergyTransfersResponse) {
		option (google.api.http).get = "/c4e/ev/v1beta1/energy_transfers";
	}

// Queries a list of ListOwnEnergyTransferOffer items.
	rpc EnergyTransferOffers(QueryEnergyTransferOffersRequest) returns (QueryEnergyTransferOffersResponse) {
		option (google.api.http).get = "/c4e/ev/v1beta1/energy_transfer_offers/{owner}";
	}

	// Queries a list of ListOwnEnergyTransfer items.
	rpc OwnEnergyTransfers(QueryOwnEnergyTransfersRequest) returns (QueryOwnEnergyTransfersResponse) {
		option (google.api.http).get = "/c4e/ev/v1beta1/own_energy_transfers/{driver}/{transfer_status}";
	}


// Queries a list of ListOwnerEnergyTransfer items.
	rpc EnergyTransfers(QueryEnergyTransfersRequest) returns (QueryEnergyTransfersResponse) {
		option (google.api.http).get = "/c4e/ev/v1beta1/energy_transfers/{owner}";
	}

// this line is used by starport scaffolding # 2
}

message QueryParamsRequest {}

message QueryParamsResponse {
  Params params = 1 [
		(gogoproto.nullable) = false
	];
}

message QueryEnergyTransferOfferRequest {
	uint64 id = 1;
}

message QueryEnergyTransferOfferResponse {
	EnergyTransferOffer energy_transfer_offer = 1 [
		(gogoproto.nullable) = false
	];
}

message QueryAllEnergyTransferOffersRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllEnergyTransferOfferResponse {
	repeated EnergyTransferOffer energy_transfer_offer = 1 [
		(gogoproto.nullable) = false
	];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryEnergyTransferRequest {
	uint64 id = 1;
}

message QueryEnergyTransferResponse {
	EnergyTransfer energy_transfer = 1 [
		(gogoproto.nullable) = false
	];
}

message QueryAllEnergyTransfersRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllEnergyTransfersResponse {
	repeated EnergyTransfer energy_transfers = 1 [
		(gogoproto.nullable) = false
	];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryEnergyTransferOffersRequest {
  string owner = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryEnergyTransferOffersResponse {
  repeated EnergyTransferOffer energy_transfer_offers = 1 [
		(gogoproto.nullable) = false
	];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}


message QueryEnergyTransfersRequest {
  string owner = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryEnergyTransfersResponse {
  repeated EnergyTransfer energy_transfers = 1 [
		(gogoproto.nullable) = false
	];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryOwnEnergyTransfersRequest {
	string driver = 1;
	int32 transfer_status = 2;
	cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryOwnEnergyTransfersResponse {
	repeated EnergyTransfer energy_transfers = 1 [
		(gogoproto.nullable) = false
	];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}


// this line is used by starport scaffolding # 3
