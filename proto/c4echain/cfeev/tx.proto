syntax = "proto3";
package chain4energy.c4echain.cfeev;

// this line is used by starport scaffolding # proto/tx/import
import "c4echain/cfeev/energy_transfer_offer.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/chain4energy/c4e-chain/x/cfeev/types";

// Msg defines the Msg service.
service Msg {
  rpc PublishEnergyTransferOffer(MsgPublishEnergyTransferOffer) returns (MsgPublishEnergyTransferOfferResponse);
  rpc StartEnergyTransfer(MsgStartEnergyTransfer) returns (MsgStartEnergyTransferResponse);
  rpc EnergyTransferStarted(MsgEnergyTransferStarted) returns (MsgEnergyTransferStartedResponse);
  rpc EnergyTransferCompleted(MsgEnergyTransferCompleted) returns (MsgEnergyTransferCompletedResponse);
  rpc CancelEnergyTransfer(MsgCancelEnergyTransfer) returns (MsgCancelEnergyTransferResponse);
  rpc RemoveEnergyOffer(MsgRemoveEnergyOffer) returns (MsgRemoveEnergyOfferResponse);
  rpc RemoveTransfer(MsgRemoveTransfer) returns (MsgRemoveTransferResponse);
  rpc UpdateDenomParam(MsgUpdateDenomParam) returns (MsgUpdateDenomParamResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgPublishEnergyTransferOffer {
  string creator = 1;
  string charger_id = 2; // eq EVGC011221122GK0122
  uint64 tariff = 3; // tariff per Wh in uc4e
  Location location = 4; // location of the charger eq '{"latitude": "34.4", "longitude": "5.2"}'
  string name = 5;
  PlugType plug_type = 6;
}

message MsgPublishEnergyTransferOfferResponse {
  uint64 id = 1;
}

message MsgStartEnergyTransfer {
  string creator = 1;
  uint64 energy_transfer_offer_id = 2;
  uint64 offered_tariff = 3;
  uint64 energy_to_transfer = 4;
}

message MsgStartEnergyTransferResponse {
  uint64 id = 1;
}

message MsgEnergyTransferStarted {
  string creator = 1; // TODO: add authorization that only verified actors can send this message
  uint64 energy_transfer_id = 2;
  string info = 3;
}

message MsgEnergyTransferStartedResponse {
}

message MsgEnergyTransferCompleted {
  string creator = 1;  // TODO: add authorization that only verified actors can send this message
  uint64 energy_transfer_id = 2;
  uint64 used_service_units = 4;
  string info = 5;
}

message MsgEnergyTransferCompletedResponse {
}

message MsgCancelEnergyTransfer {
  string creator = 1;  // TODO: add authorization that only verified actors can send this message
  uint64 energy_transfer_id = 2;
  string error_info = 4;
  string error_code = 5;
}

message MsgCancelEnergyTransferResponse {
}

message MsgRemoveEnergyOffer {
  string creator = 1;
  uint64 id = 2;
}

message MsgRemoveEnergyOfferResponse {
}

message MsgRemoveTransfer {
  string creator = 1;
  uint64 id = 2;
}

message MsgRemoveTransferResponse {
}

message MsgUpdateDenomParam {
  // authority is the address of the governance account.
  string authority = 1;
  string denom = 2;
}

message MsgUpdateDenomParamResponse {}
// this line is used by starport scaffolding # proto/tx/message
