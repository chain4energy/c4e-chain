syntax = "proto3";
package chain4energy.c4echain.cfeclaim;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/chain4energy/c4e-chain/x/cfeclaim/types";

message Campaign {
  uint64 id = 1;
  string owner = 2;
  string name = 3;
  string description = 4;
  CampaignType campaignType = 5;
  string feegrant_amount = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
  ];
  string initial_claim_free_amount = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
  ];
  string free = 8 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  bool enabled = 9;
  google.protobuf.Timestamp start_time = 10 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
  google.protobuf.Timestamp end_time = 11 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
  // period of locked coins from claim
  google.protobuf.Duration lockup_period = 12 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true
  ];
  // period of vesting coins after lockup period
  google.protobuf.Duration vesting_period = 13 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true
  ];
  string vestingPoolName = 14;
}

message CampaignTotalAmount {
  uint64 campaign_id = 1;
  repeated cosmos.base.v1beta1.Coin amount = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message CampaignAmountLeft {
  uint64 campaign_id = 1;
  repeated cosmos.base.v1beta1.Coin amount = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

enum CampaignType {
  CAMPAIGN_TYPE_UNSPECIFIED = 0;
  DEFAULT = 1; // claim records cannot be deleted
  DYNAMIC = 2; // claim records can be deleted
  VESTING_POOL = 3; // campaign don't have to be enabled (started) to add new claim records and claim records cannot be deleted
}

enum CloseAction {
  CLOSE_ACTION_UNSPECIFIED = 0;
  SEND_TO_COMMUNITY_POOL = 1;
  BURN = 2;
  SEND_TO_OWNER = 3;
}