syntax = "proto3";

package chain4energy.c4echain.cfetokenization;

import "c4echain/cfetokenization/user_devices.proto";
import "c4echain/cfetokenization/user_certificates.proto";
import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/chain4energy/c4e-chain/x/cfetokenization/types";

// Msg defines the Msg service.
service Msg {
  rpc AssignDeviceToUser (MsgAssignDeviceToUser) returns (MsgAssignDeviceToUserResponse);
  rpc AcceptDevice (MsgAcceptDevice) returns (MsgAcceptDeviceResponse);
  rpc CreateUserCertificates (MsgCreateUserCertificates) returns (MsgCreateUserCertificatesResponse);
  rpc AddMeasurement (MsgAddMeasurement) returns (MsgAddMeasurementResponse);
}

message MsgAssignDeviceToUser {
  string device_address = 1;
  string user_address = 2;
}

message MsgAssignDeviceToUserResponse {}

message MsgAcceptDevice {
  string user_address = 1;
  string device_address = 2;
  string device_name = 3;
}

message MsgAcceptDeviceResponse {}

message MsgCreateUserCertificates {
  string      owner        = 1;
  Certificate certificates = 2;
}

message MsgCreateUserCertificatesResponse {
  uint64 id = 1;
}

message MsgAddMeasurement {
  string device_address = 1;
  google.protobuf.Timestamp timestamp = 9 [
    (gogoproto.nullable) = true,
    (gogoproto.stdtime) = true
  ];
  uint64 value = 3;
}

message MsgAddMeasurementResponse {}