syntax = "proto3";
package chain4energy.c4echain.cfetokenization;

import "c4echain/cfetokenization/user_devices.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/chain4energy/c4e-chain/x/cfetokenization/types";

message UserCertificates {
  string owner = 1;
  repeated Certificate certificates = 2;
}

message Certificate {
  uint64 id = 1;
  uint64 certyficate_type_id = 2;
  uint64 power = 3;
  string device_address = 4;
  repeated uint64 measurements = 5;
  repeated string allowed_authorities = 6;
  string authority = 7;
  CertificateStatus certificate_status = 8;
  google.protobuf.Timestamp valid_until = 9 [
    (gogoproto.nullable) = true,
    (gogoproto.stdtime) = true
  ];
}

enum CertificateStatus {
  UNKNOWN_CERTIFICATE_STATUS = 0;
  VALID = 1;
  INVALID = 2;
  ON_MARKETPLACE = 3;
  BURNED = 4;
}

message CertificateOffer {
  uint64 id = 1;
  uint64 certificate_id = 2;
  string owner = 3;
  string buyer = 4;
  repeated cosmos.base.v1beta1.Coin price = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  string authorizer = 6;
  uint64 power = 7;
  repeated Measurement measurements = 8;
  google.protobuf.Timestamp valid_until = 9 [
    (gogoproto.nullable) = true,
    (gogoproto.stdtime) = true
  ];
}