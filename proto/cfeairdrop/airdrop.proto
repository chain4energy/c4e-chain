syntax = "proto3";
package chain4energy.c4echain.cfeairdrop;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/chain4energy/c4e-chain/x/cfeairdrop/types";

message UserAirdropEntries {
  string address = 1;
  string claim_address = 2;
  repeated AirdropEntry airdrop_entries = 3;
}

message AirdropEntry {
  uint64 campaign_id = 1;
  string address = 2;
  repeated cosmos.base.v1beta1.Coin airdrop_coins = 3[
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  repeated uint64 completedMissions = 4;
  repeated uint64 claimedMissions = 5;
}

message AirdropEntries {
  repeated AirdropEntry airdrop_entries = 1;
}

message AirdropDistrubitions {
  uint64 campaign_id = 1;
  repeated cosmos.base.v1beta1.Coin airdrop_coins = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message AirdropClaimsLeft {
  uint64 campaign_id = 1;
  repeated cosmos.base.v1beta1.Coin airdrop_coins = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message Campaign {
  uint64 id = 1;
  string owner = 2;
  string name = 3;
  string description = 4;
  bool allow_feegrant = 5;
  string initial_claim_free_amount = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
  ];
  bool enabled = 7;
  google.protobuf.Timestamp start_time = 8 [
    (gogoproto.nullable) = true,
    (gogoproto.stdtime) = true
  ];
  google.protobuf.Timestamp end_time = 9 [
    (gogoproto.nullable) = true,
    (gogoproto.stdtime) = true
  ];
  // period of locked coins from claim
  google.protobuf.Duration lockup_period = 10 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true
  ];
  // period of vesting coins after lockup period
  google.protobuf.Duration vesting_period = 11 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true
  ];
}

message Mission {
  uint64 id = 1;
  uint64 campaign_id = 2;
  string name = 3;
  string description = 4;
  MissionType missionType = 5;
  string weight = 6 [
    (gogoproto.nullable) = true,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  google.protobuf.Timestamp claim_start_date = 7 [
    (gogoproto.nullable) = true,
    (gogoproto.stdtime) = true
  ];
}

enum MissionType {
  MISSION_TYPE_UNSPECIFIED = 0;
  INITIAL_CLAIM = 1;
  DELEGATION = 2;
  VOTE = 3;
  CLAIM = 4;
}

enum AirdropCloseAction {
  AIRDROP_CLOSE_ACTION_UNSPECIFIED = 0;
  SEND_TO_COMMUNITY_POOL = 1;
  BURN = 2;
  SEND_TO_OWNER = 3;
}