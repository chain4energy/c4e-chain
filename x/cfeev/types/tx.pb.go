// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: c4echain/cfeev/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgPublishEnergyTransferOffer struct {
	Creator   string    `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChargerId string    `protobuf:"bytes,2,opt,name=charger_id,json=chargerId,proto3" json:"charger_id,omitempty"`
	Tariff    int32     `protobuf:"varint,3,opt,name=tariff,proto3" json:"tariff,omitempty"`
	Location  *Location `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	Name      string    `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	PlugType  PlugType  `protobuf:"varint,6,opt,name=plug_type,json=plugType,proto3,enum=chain4energy.c4echain.cfeev.PlugType" json:"plug_type,omitempty"`
}

func (m *MsgPublishEnergyTransferOffer) Reset()         { *m = MsgPublishEnergyTransferOffer{} }
func (m *MsgPublishEnergyTransferOffer) String() string { return proto.CompactTextString(m) }
func (*MsgPublishEnergyTransferOffer) ProtoMessage()    {}
func (*MsgPublishEnergyTransferOffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{0}
}
func (m *MsgPublishEnergyTransferOffer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPublishEnergyTransferOffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPublishEnergyTransferOffer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPublishEnergyTransferOffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPublishEnergyTransferOffer.Merge(m, src)
}
func (m *MsgPublishEnergyTransferOffer) XXX_Size() int {
	return m.Size()
}
func (m *MsgPublishEnergyTransferOffer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPublishEnergyTransferOffer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPublishEnergyTransferOffer proto.InternalMessageInfo

func (m *MsgPublishEnergyTransferOffer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPublishEnergyTransferOffer) GetChargerId() string {
	if m != nil {
		return m.ChargerId
	}
	return ""
}

func (m *MsgPublishEnergyTransferOffer) GetTariff() int32 {
	if m != nil {
		return m.Tariff
	}
	return 0
}

func (m *MsgPublishEnergyTransferOffer) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *MsgPublishEnergyTransferOffer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgPublishEnergyTransferOffer) GetPlugType() PlugType {
	if m != nil {
		return m.PlugType
	}
	return PlugType_Type1
}

type MsgPublishEnergyTransferOfferResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgPublishEnergyTransferOfferResponse) Reset()         { *m = MsgPublishEnergyTransferOfferResponse{} }
func (m *MsgPublishEnergyTransferOfferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPublishEnergyTransferOfferResponse) ProtoMessage()    {}
func (*MsgPublishEnergyTransferOfferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{1}
}
func (m *MsgPublishEnergyTransferOfferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPublishEnergyTransferOfferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPublishEnergyTransferOfferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPublishEnergyTransferOfferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPublishEnergyTransferOfferResponse.Merge(m, src)
}
func (m *MsgPublishEnergyTransferOfferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPublishEnergyTransferOfferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPublishEnergyTransferOfferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPublishEnergyTransferOfferResponse proto.InternalMessageInfo

func (m *MsgPublishEnergyTransferOfferResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgStartEnergyTransfer struct {
	Creator               string      `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	EnergyTransferOfferId uint64      `protobuf:"varint,2,opt,name=energy_transfer_offer_id,json=energyTransferOfferId,proto3" json:"energy_transfer_offer_id,omitempty"`
	ChargerId             string      `protobuf:"bytes,3,opt,name=charger_id,json=chargerId,proto3" json:"charger_id,omitempty"`
	OwnerAccountAddress   string      `protobuf:"bytes,4,opt,name=owner_account_address,json=ownerAccountAddress,proto3" json:"owner_account_address,omitempty"`
	OfferedTariff         string      `protobuf:"bytes,5,opt,name=offered_tariff,json=offeredTariff,proto3" json:"offered_tariff,omitempty"`
	Collateral            *types.Coin `protobuf:"bytes,6,opt,name=collateral,proto3" json:"collateral,omitempty"`
	EnergyToTransfer      int32       `protobuf:"varint,7,opt,name=energy_to_transfer,json=energyToTransfer,proto3" json:"energy_to_transfer,omitempty"`
}

func (m *MsgStartEnergyTransfer) Reset()         { *m = MsgStartEnergyTransfer{} }
func (m *MsgStartEnergyTransfer) String() string { return proto.CompactTextString(m) }
func (*MsgStartEnergyTransfer) ProtoMessage()    {}
func (*MsgStartEnergyTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{2}
}
func (m *MsgStartEnergyTransfer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStartEnergyTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStartEnergyTransfer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStartEnergyTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStartEnergyTransfer.Merge(m, src)
}
func (m *MsgStartEnergyTransfer) XXX_Size() int {
	return m.Size()
}
func (m *MsgStartEnergyTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStartEnergyTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStartEnergyTransfer proto.InternalMessageInfo

func (m *MsgStartEnergyTransfer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStartEnergyTransfer) GetEnergyTransferOfferId() uint64 {
	if m != nil {
		return m.EnergyTransferOfferId
	}
	return 0
}

func (m *MsgStartEnergyTransfer) GetChargerId() string {
	if m != nil {
		return m.ChargerId
	}
	return ""
}

func (m *MsgStartEnergyTransfer) GetOwnerAccountAddress() string {
	if m != nil {
		return m.OwnerAccountAddress
	}
	return ""
}

func (m *MsgStartEnergyTransfer) GetOfferedTariff() string {
	if m != nil {
		return m.OfferedTariff
	}
	return ""
}

func (m *MsgStartEnergyTransfer) GetCollateral() *types.Coin {
	if m != nil {
		return m.Collateral
	}
	return nil
}

func (m *MsgStartEnergyTransfer) GetEnergyToTransfer() int32 {
	if m != nil {
		return m.EnergyToTransfer
	}
	return 0
}

type MsgStartEnergyTransferResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgStartEnergyTransferResponse) Reset()         { *m = MsgStartEnergyTransferResponse{} }
func (m *MsgStartEnergyTransferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStartEnergyTransferResponse) ProtoMessage()    {}
func (*MsgStartEnergyTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{3}
}
func (m *MsgStartEnergyTransferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStartEnergyTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStartEnergyTransferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStartEnergyTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStartEnergyTransferResponse.Merge(m, src)
}
func (m *MsgStartEnergyTransferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStartEnergyTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStartEnergyTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStartEnergyTransferResponse proto.InternalMessageInfo

func (m *MsgStartEnergyTransferResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgEnergyTransferStarted struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	EnergyTransferId uint64 `protobuf:"varint,2,opt,name=energy_transfer_id,json=energyTransferId,proto3" json:"energy_transfer_id,omitempty"`
	ChargerId        string `protobuf:"bytes,3,opt,name=charger_id,json=chargerId,proto3" json:"charger_id,omitempty"`
	Info             string `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *MsgEnergyTransferStarted) Reset()         { *m = MsgEnergyTransferStarted{} }
func (m *MsgEnergyTransferStarted) String() string { return proto.CompactTextString(m) }
func (*MsgEnergyTransferStarted) ProtoMessage()    {}
func (*MsgEnergyTransferStarted) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{4}
}
func (m *MsgEnergyTransferStarted) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEnergyTransferStarted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEnergyTransferStarted.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEnergyTransferStarted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEnergyTransferStarted.Merge(m, src)
}
func (m *MsgEnergyTransferStarted) XXX_Size() int {
	return m.Size()
}
func (m *MsgEnergyTransferStarted) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEnergyTransferStarted.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEnergyTransferStarted proto.InternalMessageInfo

func (m *MsgEnergyTransferStarted) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgEnergyTransferStarted) GetEnergyTransferId() uint64 {
	if m != nil {
		return m.EnergyTransferId
	}
	return 0
}

func (m *MsgEnergyTransferStarted) GetChargerId() string {
	if m != nil {
		return m.ChargerId
	}
	return ""
}

func (m *MsgEnergyTransferStarted) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type MsgEnergyTransferStartedResponse struct {
}

func (m *MsgEnergyTransferStartedResponse) Reset()         { *m = MsgEnergyTransferStartedResponse{} }
func (m *MsgEnergyTransferStartedResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEnergyTransferStartedResponse) ProtoMessage()    {}
func (*MsgEnergyTransferStartedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{5}
}
func (m *MsgEnergyTransferStartedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEnergyTransferStartedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEnergyTransferStartedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEnergyTransferStartedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEnergyTransferStartedResponse.Merge(m, src)
}
func (m *MsgEnergyTransferStartedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEnergyTransferStartedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEnergyTransferStartedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEnergyTransferStartedResponse proto.InternalMessageInfo

type MsgEnergyTransferCompleted struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	EnergyTransferId uint64 `protobuf:"varint,2,opt,name=energy_transfer_id,json=energyTransferId,proto3" json:"energy_transfer_id,omitempty"`
	ChargerId        string `protobuf:"bytes,3,opt,name=charger_id,json=chargerId,proto3" json:"charger_id,omitempty"`
	UsedServiceUnits int32  `protobuf:"varint,4,opt,name=used_service_units,json=usedServiceUnits,proto3" json:"used_service_units,omitempty"`
	Info             string `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *MsgEnergyTransferCompleted) Reset()         { *m = MsgEnergyTransferCompleted{} }
func (m *MsgEnergyTransferCompleted) String() string { return proto.CompactTextString(m) }
func (*MsgEnergyTransferCompleted) ProtoMessage()    {}
func (*MsgEnergyTransferCompleted) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{6}
}
func (m *MsgEnergyTransferCompleted) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEnergyTransferCompleted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEnergyTransferCompleted.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEnergyTransferCompleted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEnergyTransferCompleted.Merge(m, src)
}
func (m *MsgEnergyTransferCompleted) XXX_Size() int {
	return m.Size()
}
func (m *MsgEnergyTransferCompleted) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEnergyTransferCompleted.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEnergyTransferCompleted proto.InternalMessageInfo

func (m *MsgEnergyTransferCompleted) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgEnergyTransferCompleted) GetEnergyTransferId() uint64 {
	if m != nil {
		return m.EnergyTransferId
	}
	return 0
}

func (m *MsgEnergyTransferCompleted) GetChargerId() string {
	if m != nil {
		return m.ChargerId
	}
	return ""
}

func (m *MsgEnergyTransferCompleted) GetUsedServiceUnits() int32 {
	if m != nil {
		return m.UsedServiceUnits
	}
	return 0
}

func (m *MsgEnergyTransferCompleted) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type MsgEnergyTransferCompletedResponse struct {
}

func (m *MsgEnergyTransferCompletedResponse) Reset()         { *m = MsgEnergyTransferCompletedResponse{} }
func (m *MsgEnergyTransferCompletedResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEnergyTransferCompletedResponse) ProtoMessage()    {}
func (*MsgEnergyTransferCompletedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{7}
}
func (m *MsgEnergyTransferCompletedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEnergyTransferCompletedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEnergyTransferCompletedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEnergyTransferCompletedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEnergyTransferCompletedResponse.Merge(m, src)
}
func (m *MsgEnergyTransferCompletedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEnergyTransferCompletedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEnergyTransferCompletedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEnergyTransferCompletedResponse proto.InternalMessageInfo

type MsgCancelEnergyTransfer struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	EnergyTransferId uint64 `protobuf:"varint,2,opt,name=energy_transfer_id,json=energyTransferId,proto3" json:"energy_transfer_id,omitempty"`
	ChargerId        string `protobuf:"bytes,3,opt,name=charger_id,json=chargerId,proto3" json:"charger_id,omitempty"`
	ErrorInfo        string `protobuf:"bytes,4,opt,name=error_info,json=errorInfo,proto3" json:"error_info,omitempty"`
	ErrorCode        string `protobuf:"bytes,5,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (m *MsgCancelEnergyTransfer) Reset()         { *m = MsgCancelEnergyTransfer{} }
func (m *MsgCancelEnergyTransfer) String() string { return proto.CompactTextString(m) }
func (*MsgCancelEnergyTransfer) ProtoMessage()    {}
func (*MsgCancelEnergyTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{8}
}
func (m *MsgCancelEnergyTransfer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelEnergyTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelEnergyTransfer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelEnergyTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelEnergyTransfer.Merge(m, src)
}
func (m *MsgCancelEnergyTransfer) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelEnergyTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelEnergyTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelEnergyTransfer proto.InternalMessageInfo

func (m *MsgCancelEnergyTransfer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCancelEnergyTransfer) GetEnergyTransferId() uint64 {
	if m != nil {
		return m.EnergyTransferId
	}
	return 0
}

func (m *MsgCancelEnergyTransfer) GetChargerId() string {
	if m != nil {
		return m.ChargerId
	}
	return ""
}

func (m *MsgCancelEnergyTransfer) GetErrorInfo() string {
	if m != nil {
		return m.ErrorInfo
	}
	return ""
}

func (m *MsgCancelEnergyTransfer) GetErrorCode() string {
	if m != nil {
		return m.ErrorCode
	}
	return ""
}

type MsgCancelEnergyTransferResponse struct {
}

func (m *MsgCancelEnergyTransferResponse) Reset()         { *m = MsgCancelEnergyTransferResponse{} }
func (m *MsgCancelEnergyTransferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCancelEnergyTransferResponse) ProtoMessage()    {}
func (*MsgCancelEnergyTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{9}
}
func (m *MsgCancelEnergyTransferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelEnergyTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelEnergyTransferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelEnergyTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelEnergyTransferResponse.Merge(m, src)
}
func (m *MsgCancelEnergyTransferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelEnergyTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelEnergyTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelEnergyTransferResponse proto.InternalMessageInfo

type MsgRemoveEnergyOffer struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgRemoveEnergyOffer) Reset()         { *m = MsgRemoveEnergyOffer{} }
func (m *MsgRemoveEnergyOffer) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveEnergyOffer) ProtoMessage()    {}
func (*MsgRemoveEnergyOffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{10}
}
func (m *MsgRemoveEnergyOffer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveEnergyOffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveEnergyOffer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveEnergyOffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveEnergyOffer.Merge(m, src)
}
func (m *MsgRemoveEnergyOffer) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveEnergyOffer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveEnergyOffer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveEnergyOffer proto.InternalMessageInfo

func (m *MsgRemoveEnergyOffer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveEnergyOffer) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgRemoveEnergyOfferResponse struct {
}

func (m *MsgRemoveEnergyOfferResponse) Reset()         { *m = MsgRemoveEnergyOfferResponse{} }
func (m *MsgRemoveEnergyOfferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveEnergyOfferResponse) ProtoMessage()    {}
func (*MsgRemoveEnergyOfferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{11}
}
func (m *MsgRemoveEnergyOfferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveEnergyOfferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveEnergyOfferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveEnergyOfferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveEnergyOfferResponse.Merge(m, src)
}
func (m *MsgRemoveEnergyOfferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveEnergyOfferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveEnergyOfferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveEnergyOfferResponse proto.InternalMessageInfo

type MsgRemoveTransfer struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgRemoveTransfer) Reset()         { *m = MsgRemoveTransfer{} }
func (m *MsgRemoveTransfer) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveTransfer) ProtoMessage()    {}
func (*MsgRemoveTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{12}
}
func (m *MsgRemoveTransfer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveTransfer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveTransfer.Merge(m, src)
}
func (m *MsgRemoveTransfer) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveTransfer proto.InternalMessageInfo

func (m *MsgRemoveTransfer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveTransfer) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgRemoveTransferResponse struct {
}

func (m *MsgRemoveTransferResponse) Reset()         { *m = MsgRemoveTransferResponse{} }
func (m *MsgRemoveTransferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveTransferResponse) ProtoMessage()    {}
func (*MsgRemoveTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_45ff086c2bcbd436, []int{13}
}
func (m *MsgRemoveTransferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveTransferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveTransferResponse.Merge(m, src)
}
func (m *MsgRemoveTransferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveTransferResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgPublishEnergyTransferOffer)(nil), "chain4energy.c4echain.cfeev.MsgPublishEnergyTransferOffer")
	proto.RegisterType((*MsgPublishEnergyTransferOfferResponse)(nil), "chain4energy.c4echain.cfeev.MsgPublishEnergyTransferOfferResponse")
	proto.RegisterType((*MsgStartEnergyTransfer)(nil), "chain4energy.c4echain.cfeev.MsgStartEnergyTransfer")
	proto.RegisterType((*MsgStartEnergyTransferResponse)(nil), "chain4energy.c4echain.cfeev.MsgStartEnergyTransferResponse")
	proto.RegisterType((*MsgEnergyTransferStarted)(nil), "chain4energy.c4echain.cfeev.MsgEnergyTransferStarted")
	proto.RegisterType((*MsgEnergyTransferStartedResponse)(nil), "chain4energy.c4echain.cfeev.MsgEnergyTransferStartedResponse")
	proto.RegisterType((*MsgEnergyTransferCompleted)(nil), "chain4energy.c4echain.cfeev.MsgEnergyTransferCompleted")
	proto.RegisterType((*MsgEnergyTransferCompletedResponse)(nil), "chain4energy.c4echain.cfeev.MsgEnergyTransferCompletedResponse")
	proto.RegisterType((*MsgCancelEnergyTransfer)(nil), "chain4energy.c4echain.cfeev.MsgCancelEnergyTransfer")
	proto.RegisterType((*MsgCancelEnergyTransferResponse)(nil), "chain4energy.c4echain.cfeev.MsgCancelEnergyTransferResponse")
	proto.RegisterType((*MsgRemoveEnergyOffer)(nil), "chain4energy.c4echain.cfeev.MsgRemoveEnergyOffer")
	proto.RegisterType((*MsgRemoveEnergyOfferResponse)(nil), "chain4energy.c4echain.cfeev.MsgRemoveEnergyOfferResponse")
	proto.RegisterType((*MsgRemoveTransfer)(nil), "chain4energy.c4echain.cfeev.MsgRemoveTransfer")
	proto.RegisterType((*MsgRemoveTransferResponse)(nil), "chain4energy.c4echain.cfeev.MsgRemoveTransferResponse")
}

func init() { proto.RegisterFile("c4echain/cfeev/tx.proto", fileDescriptor_45ff086c2bcbd436) }

var fileDescriptor_45ff086c2bcbd436 = []byte{
	// 847 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x41, 0x6f, 0xdc, 0x44,
	0x14, 0xce, 0x6c, 0x36, 0x49, 0xf7, 0x55, 0x44, 0xa9, 0xdb, 0x34, 0xae, 0x4b, 0xcc, 0x62, 0x11,
	0x29, 0x42, 0xc5, 0x26, 0x69, 0x20, 0x2a, 0x50, 0x41, 0x12, 0x71, 0x88, 0xc4, 0x8a, 0xca, 0x0d,
	0x17, 0x2e, 0x96, 0x77, 0xfc, 0xec, 0x58, 0xf2, 0x7a, 0xac, 0x19, 0x6f, 0x48, 0x8e, 0x9c, 0x90,
	0x40, 0x48, 0x48, 0x88, 0x1b, 0xbf, 0x85, 0x1b, 0x12, 0x27, 0xd4, 0x23, 0x37, 0x50, 0xf2, 0x47,
	0xd0, 0x8e, 0xed, 0x61, 0xb3, 0xeb, 0xdd, 0x4d, 0x56, 0xa8, 0xb7, 0xf1, 0xbc, 0xf7, 0x7d, 0xf3,
	0xde, 0xf7, 0xde, 0x3c, 0x0f, 0x6c, 0xd0, 0x3d, 0xa4, 0xa7, 0x7e, 0x9c, 0x3a, 0x34, 0x44, 0x3c,
	0x73, 0xf2, 0x73, 0x3b, 0xe3, 0x2c, 0x67, 0xda, 0x63, 0xb9, 0xbb, 0x87, 0x29, 0xf2, 0xe8, 0xc2,
	0xae, 0xbc, 0x6c, 0xe9, 0x65, 0x6c, 0x8e, 0xa0, 0x12, 0x46, 0xfd, 0x3c, 0x66, 0x69, 0x81, 0x35,
	0xde, 0x1d, 0x31, 0x17, 0x24, 0x5e, 0xce, 0xfd, 0x54, 0x84, 0xc8, 0x3d, 0x16, 0x86, 0xc8, 0x4b,
	0x5f, 0x93, 0x32, 0xd1, 0x63, 0xc2, 0xe9, 0xfa, 0x02, 0x9d, 0xb3, 0x9d, 0x2e, 0xe6, 0xfe, 0x8e,
	0x43, 0x59, 0x5c, 0x72, 0x59, 0x3f, 0x34, 0x60, 0xb3, 0x23, 0xa2, 0x17, 0xfd, 0x6e, 0x12, 0x8b,
	0xd3, 0xcf, 0x25, 0xd3, 0x49, 0x49, 0xf4, 0xe5, 0x80, 0x47, 0xd3, 0x61, 0x85, 0x72, 0xf4, 0x73,
	0xc6, 0x75, 0xd2, 0x26, 0xdb, 0x2d, 0xb7, 0xfa, 0xd4, 0x36, 0x01, 0xe8, 0xa9, 0xcf, 0x23, 0xe4,
	0x5e, 0x1c, 0xe8, 0x0d, 0x69, 0x6c, 0x95, 0x3b, 0xc7, 0x81, 0xf6, 0x10, 0x96, 0x73, 0x9f, 0xc7,
	0x61, 0xa8, 0x2f, 0xb6, 0xc9, 0xf6, 0x92, 0x5b, 0x7e, 0x69, 0x07, 0x70, 0xa7, 0x4a, 0x48, 0x6f,
	0xb6, 0xc9, 0xf6, 0xdd, 0xdd, 0x2d, 0x7b, 0x8a, 0x1a, 0xf6, 0x17, 0xa5, 0xb3, 0xab, 0x60, 0x9a,
	0x06, 0xcd, 0xd4, 0xef, 0xa1, 0xbe, 0x24, 0xcf, 0x94, 0x6b, 0xed, 0x10, 0x5a, 0x59, 0xd2, 0x8f,
	0xbc, 0xfc, 0x22, 0x43, 0x7d, 0xb9, 0x4d, 0xb6, 0x57, 0x67, 0xf0, 0xbe, 0x48, 0xfa, 0xd1, 0xc9,
	0x45, 0x86, 0xee, 0x9d, 0xac, 0x5c, 0x59, 0xfb, 0xb0, 0x35, 0x55, 0x0c, 0x17, 0x45, 0xc6, 0x52,
	0x81, 0xda, 0x2a, 0x34, 0xe2, 0x40, 0xea, 0xd1, 0x74, 0x1b, 0x71, 0x60, 0xfd, 0xd9, 0x80, 0x87,
	0x1d, 0x11, 0xbd, 0xcc, 0x7d, 0x9e, 0x5f, 0xc7, 0x4d, 0xd1, 0x6f, 0x1f, 0xf4, 0xda, 0xd2, 0x55,
	0x6a, 0x36, 0xdd, 0x75, 0x1c, 0x8f, 0xe1, 0x38, 0x18, 0x11, 0x7e, 0x71, 0x54, 0xf8, 0x5d, 0x58,
	0x67, 0xdf, 0xa4, 0xc8, 0x3d, 0x9f, 0x52, 0xd6, 0x4f, 0x73, 0xcf, 0x0f, 0x02, 0x8e, 0x42, 0x48,
	0xb5, 0x5b, 0xee, 0x7d, 0x69, 0x3c, 0x28, 0x6c, 0x07, 0x85, 0x49, 0xdb, 0x82, 0x55, 0x79, 0x36,
	0x06, 0x5e, 0x59, 0xb4, 0x42, 0xdb, 0x37, 0xca, 0xdd, 0x93, 0xa2, 0x76, 0xcf, 0x00, 0x28, 0x4b,
	0x12, 0x3f, 0x47, 0xee, 0x27, 0x52, 0xe5, 0xbb, 0xbb, 0x8f, 0xec, 0xa2, 0xc7, 0xec, 0x41, 0x8f,
	0xd9, 0x65, 0x8f, 0xd9, 0x47, 0x2c, 0x4e, 0xdd, 0x21, 0x67, 0xed, 0x09, 0x68, 0x55, 0xb6, 0x4c,
	0x25, 0xac, 0xaf, 0xc8, 0xd6, 0x58, 0x2b, 0xf3, 0x64, 0x55, 0xa6, 0xd6, 0xfb, 0x60, 0xd6, 0xeb,
	0x39, 0xb1, 0x04, 0xbf, 0x10, 0xd0, 0x3b, 0x22, 0xba, 0xee, 0x2d, 0x09, 0x30, 0x98, 0x52, 0x84,
	0xa1, 0xb0, 0xaa, 0x22, 0x28, 0xf9, 0xd7, 0xae, 0xcb, 0x3f, 0x5b, 0x79, 0x0d, 0x9a, 0x71, 0x1a,
	0xb2, 0x52, 0x68, 0xb9, 0xb6, 0x2c, 0x68, 0x4f, 0x0a, 0xab, 0xca, 0xc5, 0xfa, 0x9d, 0x80, 0x31,
	0xe6, 0x74, 0xc4, 0x7a, 0x59, 0x82, 0xaf, 0x31, 0xfa, 0x27, 0xa0, 0xf5, 0x05, 0x06, 0x9e, 0x40,
	0x7e, 0x16, 0x53, 0xf4, 0xfa, 0x69, 0x9c, 0x17, 0x4d, 0xb3, 0xe4, 0xae, 0x0d, 0x2c, 0x2f, 0x0b,
	0xc3, 0x57, 0x83, 0x7d, 0x95, 0xeb, 0xd2, 0x50, 0xae, 0xef, 0x80, 0x35, 0x39, 0x0d, 0x95, 0xed,
	0x6f, 0x04, 0x36, 0x3a, 0x22, 0x3a, 0xf2, 0x53, 0x8a, 0xc9, 0x8d, 0x6f, 0xcb, 0xff, 0x9a, 0xea,
	0x26, 0x00, 0x72, 0xce, 0xb8, 0x37, 0x54, 0xae, 0x96, 0xdc, 0x39, 0x4e, 0x43, 0xf6, 0x9f, 0x99,
	0xb2, 0xa0, 0x9a, 0x32, 0x85, 0xf9, 0x88, 0x05, 0x68, 0xbd, 0x0d, 0x6f, 0x4d, 0x88, 0x5f, 0xe5,
	0xf8, 0x19, 0x3c, 0xe8, 0x88, 0xc8, 0xc5, 0x1e, 0x3b, 0xc3, 0xc2, 0x65, 0xd6, 0x34, 0x2d, 0xfa,
	0xb9, 0xa1, 0xfa, 0xd9, 0x84, 0x37, 0xeb, 0x18, 0xd4, 0x09, 0xcf, 0xe1, 0x9e, 0xb2, 0xdf, 0x40,
	0xbe, 0x51, 0xfa, 0xc7, 0xf0, 0x68, 0x0c, 0x5e, 0x71, 0xef, 0xfe, 0xbd, 0x02, 0x8b, 0x1d, 0x11,
	0x69, 0xbf, 0x12, 0x30, 0xa6, 0xfc, 0x1a, 0x3e, 0x9a, 0x3a, 0x5f, 0xa7, 0x4e, 0x52, 0xe3, 0x70,
	0x7e, 0xac, 0x1a, 0x01, 0xdf, 0x11, 0xb8, 0x5f, 0x37, 0x72, 0x9f, 0xce, 0xe2, 0xae, 0x01, 0x19,
	0x1f, 0xcf, 0x01, 0x52, 0x91, 0xfc, 0x48, 0x60, 0xbd, 0x7e, 0xf2, 0x7c, 0x30, 0x8b, 0xb6, 0x16,
	0x66, 0x3c, 0x9f, 0x0b, 0xa6, 0xe2, 0xf9, 0x99, 0xc0, 0xc6, 0xa4, 0x69, 0xb2, 0x7f, 0x3b, 0x6a,
	0x05, 0x34, 0x3e, 0x9d, 0x13, 0xa8, 0xa2, 0xfa, 0x9e, 0xc0, 0x83, 0xda, 0x5b, 0xbf, 0x37, 0x8b,
	0xb9, 0x0e, 0x65, 0x7c, 0x32, 0x0f, 0x4a, 0x05, 0xf3, 0x2d, 0x81, 0x7b, 0xe3, 0xf7, 0x73, 0x67,
	0x16, 0xe7, 0x18, 0xc4, 0x78, 0x76, 0x6b, 0x88, 0x8a, 0xe1, 0x1c, 0x56, 0x47, 0x2e, 0xb0, 0x7d,
	0x33, 0x32, 0xa5, 0xc1, 0x87, 0xb7, 0xf3, 0xaf, 0x4e, 0x3e, 0x3c, 0xfe, 0xe3, 0xd2, 0x24, 0xaf,
	0x2e, 0x4d, 0xf2, 0xcf, 0xa5, 0x49, 0x7e, 0xba, 0x32, 0x17, 0x5e, 0x5d, 0x99, 0x0b, 0x7f, 0x5d,
	0x99, 0x0b, 0x5f, 0x3b, 0x51, 0x9c, 0x9f, 0xf6, 0xbb, 0x36, 0x65, 0x3d, 0x67, 0x98, 0xdb, 0xa1,
	0x7b, 0xf8, 0x5e, 0xf1, 0xec, 0x3c, 0xaf, 0x5e, 0xb3, 0x17, 0x19, 0x8a, 0xee, 0xb2, 0x7c, 0x49,
	0x3e, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x25, 0xa7, 0x1c, 0xa6, 0xec, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	PublishEnergyTransferOffer(ctx context.Context, in *MsgPublishEnergyTransferOffer, opts ...grpc.CallOption) (*MsgPublishEnergyTransferOfferResponse, error)
	StartEnergyTransfer(ctx context.Context, in *MsgStartEnergyTransfer, opts ...grpc.CallOption) (*MsgStartEnergyTransferResponse, error)
	EnergyTransferStarted(ctx context.Context, in *MsgEnergyTransferStarted, opts ...grpc.CallOption) (*MsgEnergyTransferStartedResponse, error)
	EnergyTransferCompleted(ctx context.Context, in *MsgEnergyTransferCompleted, opts ...grpc.CallOption) (*MsgEnergyTransferCompletedResponse, error)
	CancelEnergyTransfer(ctx context.Context, in *MsgCancelEnergyTransfer, opts ...grpc.CallOption) (*MsgCancelEnergyTransferResponse, error)
	RemoveEnergyOffer(ctx context.Context, in *MsgRemoveEnergyOffer, opts ...grpc.CallOption) (*MsgRemoveEnergyOfferResponse, error)
	RemoveTransfer(ctx context.Context, in *MsgRemoveTransfer, opts ...grpc.CallOption) (*MsgRemoveTransferResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) PublishEnergyTransferOffer(ctx context.Context, in *MsgPublishEnergyTransferOffer, opts ...grpc.CallOption) (*MsgPublishEnergyTransferOfferResponse, error) {
	out := new(MsgPublishEnergyTransferOfferResponse)
	err := c.cc.Invoke(ctx, "/chain4energy.c4echain.cfeev.Msg/PublishEnergyTransferOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StartEnergyTransfer(ctx context.Context, in *MsgStartEnergyTransfer, opts ...grpc.CallOption) (*MsgStartEnergyTransferResponse, error) {
	out := new(MsgStartEnergyTransferResponse)
	err := c.cc.Invoke(ctx, "/chain4energy.c4echain.cfeev.Msg/StartEnergyTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EnergyTransferStarted(ctx context.Context, in *MsgEnergyTransferStarted, opts ...grpc.CallOption) (*MsgEnergyTransferStartedResponse, error) {
	out := new(MsgEnergyTransferStartedResponse)
	err := c.cc.Invoke(ctx, "/chain4energy.c4echain.cfeev.Msg/EnergyTransferStarted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EnergyTransferCompleted(ctx context.Context, in *MsgEnergyTransferCompleted, opts ...grpc.CallOption) (*MsgEnergyTransferCompletedResponse, error) {
	out := new(MsgEnergyTransferCompletedResponse)
	err := c.cc.Invoke(ctx, "/chain4energy.c4echain.cfeev.Msg/EnergyTransferCompleted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CancelEnergyTransfer(ctx context.Context, in *MsgCancelEnergyTransfer, opts ...grpc.CallOption) (*MsgCancelEnergyTransferResponse, error) {
	out := new(MsgCancelEnergyTransferResponse)
	err := c.cc.Invoke(ctx, "/chain4energy.c4echain.cfeev.Msg/CancelEnergyTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveEnergyOffer(ctx context.Context, in *MsgRemoveEnergyOffer, opts ...grpc.CallOption) (*MsgRemoveEnergyOfferResponse, error) {
	out := new(MsgRemoveEnergyOfferResponse)
	err := c.cc.Invoke(ctx, "/chain4energy.c4echain.cfeev.Msg/RemoveEnergyOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveTransfer(ctx context.Context, in *MsgRemoveTransfer, opts ...grpc.CallOption) (*MsgRemoveTransferResponse, error) {
	out := new(MsgRemoveTransferResponse)
	err := c.cc.Invoke(ctx, "/chain4energy.c4echain.cfeev.Msg/RemoveTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	PublishEnergyTransferOffer(context.Context, *MsgPublishEnergyTransferOffer) (*MsgPublishEnergyTransferOfferResponse, error)
	StartEnergyTransfer(context.Context, *MsgStartEnergyTransfer) (*MsgStartEnergyTransferResponse, error)
	EnergyTransferStarted(context.Context, *MsgEnergyTransferStarted) (*MsgEnergyTransferStartedResponse, error)
	EnergyTransferCompleted(context.Context, *MsgEnergyTransferCompleted) (*MsgEnergyTransferCompletedResponse, error)
	CancelEnergyTransfer(context.Context, *MsgCancelEnergyTransfer) (*MsgCancelEnergyTransferResponse, error)
	RemoveEnergyOffer(context.Context, *MsgRemoveEnergyOffer) (*MsgRemoveEnergyOfferResponse, error)
	RemoveTransfer(context.Context, *MsgRemoveTransfer) (*MsgRemoveTransferResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) PublishEnergyTransferOffer(ctx context.Context, req *MsgPublishEnergyTransferOffer) (*MsgPublishEnergyTransferOfferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishEnergyTransferOffer not implemented")
}
func (*UnimplementedMsgServer) StartEnergyTransfer(ctx context.Context, req *MsgStartEnergyTransfer) (*MsgStartEnergyTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartEnergyTransfer not implemented")
}
func (*UnimplementedMsgServer) EnergyTransferStarted(ctx context.Context, req *MsgEnergyTransferStarted) (*MsgEnergyTransferStartedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnergyTransferStarted not implemented")
}
func (*UnimplementedMsgServer) EnergyTransferCompleted(ctx context.Context, req *MsgEnergyTransferCompleted) (*MsgEnergyTransferCompletedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnergyTransferCompleted not implemented")
}
func (*UnimplementedMsgServer) CancelEnergyTransfer(ctx context.Context, req *MsgCancelEnergyTransfer) (*MsgCancelEnergyTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelEnergyTransfer not implemented")
}
func (*UnimplementedMsgServer) RemoveEnergyOffer(ctx context.Context, req *MsgRemoveEnergyOffer) (*MsgRemoveEnergyOfferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveEnergyOffer not implemented")
}
func (*UnimplementedMsgServer) RemoveTransfer(ctx context.Context, req *MsgRemoveTransfer) (*MsgRemoveTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTransfer not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_PublishEnergyTransferOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPublishEnergyTransferOffer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PublishEnergyTransferOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain4energy.c4echain.cfeev.Msg/PublishEnergyTransferOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PublishEnergyTransferOffer(ctx, req.(*MsgPublishEnergyTransferOffer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StartEnergyTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStartEnergyTransfer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StartEnergyTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain4energy.c4echain.cfeev.Msg/StartEnergyTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StartEnergyTransfer(ctx, req.(*MsgStartEnergyTransfer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EnergyTransferStarted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEnergyTransferStarted)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EnergyTransferStarted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain4energy.c4echain.cfeev.Msg/EnergyTransferStarted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EnergyTransferStarted(ctx, req.(*MsgEnergyTransferStarted))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EnergyTransferCompleted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEnergyTransferCompleted)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EnergyTransferCompleted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain4energy.c4echain.cfeev.Msg/EnergyTransferCompleted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EnergyTransferCompleted(ctx, req.(*MsgEnergyTransferCompleted))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CancelEnergyTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCancelEnergyTransfer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CancelEnergyTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain4energy.c4echain.cfeev.Msg/CancelEnergyTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CancelEnergyTransfer(ctx, req.(*MsgCancelEnergyTransfer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveEnergyOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveEnergyOffer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveEnergyOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain4energy.c4echain.cfeev.Msg/RemoveEnergyOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveEnergyOffer(ctx, req.(*MsgRemoveEnergyOffer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveTransfer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain4energy.c4echain.cfeev.Msg/RemoveTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveTransfer(ctx, req.(*MsgRemoveTransfer))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chain4energy.c4echain.cfeev.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PublishEnergyTransferOffer",
			Handler:    _Msg_PublishEnergyTransferOffer_Handler,
		},
		{
			MethodName: "StartEnergyTransfer",
			Handler:    _Msg_StartEnergyTransfer_Handler,
		},
		{
			MethodName: "EnergyTransferStarted",
			Handler:    _Msg_EnergyTransferStarted_Handler,
		},
		{
			MethodName: "EnergyTransferCompleted",
			Handler:    _Msg_EnergyTransferCompleted_Handler,
		},
		{
			MethodName: "CancelEnergyTransfer",
			Handler:    _Msg_CancelEnergyTransfer_Handler,
		},
		{
			MethodName: "RemoveEnergyOffer",
			Handler:    _Msg_RemoveEnergyOffer_Handler,
		},
		{
			MethodName: "RemoveTransfer",
			Handler:    _Msg_RemoveTransfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "c4echain/cfeev/tx.proto",
}

func (m *MsgPublishEnergyTransferOffer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPublishEnergyTransferOffer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPublishEnergyTransferOffer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlugType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PlugType))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Location != nil {
		{
			size, err := m.Location.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Tariff != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Tariff))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ChargerId) > 0 {
		i -= len(m.ChargerId)
		copy(dAtA[i:], m.ChargerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChargerId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPublishEnergyTransferOfferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPublishEnergyTransferOfferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPublishEnergyTransferOfferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgStartEnergyTransfer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStartEnergyTransfer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStartEnergyTransfer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EnergyToTransfer != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EnergyToTransfer))
		i--
		dAtA[i] = 0x38
	}
	if m.Collateral != nil {
		{
			size, err := m.Collateral.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.OfferedTariff) > 0 {
		i -= len(m.OfferedTariff)
		copy(dAtA[i:], m.OfferedTariff)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OfferedTariff)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.OwnerAccountAddress) > 0 {
		i -= len(m.OwnerAccountAddress)
		copy(dAtA[i:], m.OwnerAccountAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAccountAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ChargerId) > 0 {
		i -= len(m.ChargerId)
		copy(dAtA[i:], m.ChargerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChargerId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.EnergyTransferOfferId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EnergyTransferOfferId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStartEnergyTransferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStartEnergyTransferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStartEnergyTransferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgEnergyTransferStarted) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEnergyTransferStarted) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEnergyTransferStarted) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Info) > 0 {
		i -= len(m.Info)
		copy(dAtA[i:], m.Info)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Info)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ChargerId) > 0 {
		i -= len(m.ChargerId)
		copy(dAtA[i:], m.ChargerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChargerId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.EnergyTransferId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EnergyTransferId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEnergyTransferStartedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEnergyTransferStartedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEnergyTransferStartedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEnergyTransferCompleted) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEnergyTransferCompleted) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEnergyTransferCompleted) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Info) > 0 {
		i -= len(m.Info)
		copy(dAtA[i:], m.Info)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Info)))
		i--
		dAtA[i] = 0x2a
	}
	if m.UsedServiceUnits != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.UsedServiceUnits))
		i--
		dAtA[i] = 0x20
	}
	if len(m.ChargerId) > 0 {
		i -= len(m.ChargerId)
		copy(dAtA[i:], m.ChargerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChargerId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.EnergyTransferId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EnergyTransferId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEnergyTransferCompletedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEnergyTransferCompletedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEnergyTransferCompletedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCancelEnergyTransfer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelEnergyTransfer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelEnergyTransfer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ErrorCode) > 0 {
		i -= len(m.ErrorCode)
		copy(dAtA[i:], m.ErrorCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ErrorCode)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ErrorInfo) > 0 {
		i -= len(m.ErrorInfo)
		copy(dAtA[i:], m.ErrorInfo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ErrorInfo)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ChargerId) > 0 {
		i -= len(m.ChargerId)
		copy(dAtA[i:], m.ChargerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChargerId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.EnergyTransferId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EnergyTransferId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCancelEnergyTransferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelEnergyTransferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelEnergyTransferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveEnergyOffer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveEnergyOffer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveEnergyOffer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveEnergyOfferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveEnergyOfferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveEnergyOfferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveTransfer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveTransfer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveTransfer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveTransferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveTransferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveTransferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgPublishEnergyTransferOffer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChargerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Tariff != 0 {
		n += 1 + sovTx(uint64(m.Tariff))
	}
	if m.Location != nil {
		l = m.Location.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.PlugType != 0 {
		n += 1 + sovTx(uint64(m.PlugType))
	}
	return n
}

func (m *MsgPublishEnergyTransferOfferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgStartEnergyTransfer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EnergyTransferOfferId != 0 {
		n += 1 + sovTx(uint64(m.EnergyTransferOfferId))
	}
	l = len(m.ChargerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAccountAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OfferedTariff)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Collateral != nil {
		l = m.Collateral.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EnergyToTransfer != 0 {
		n += 1 + sovTx(uint64(m.EnergyToTransfer))
	}
	return n
}

func (m *MsgStartEnergyTransferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgEnergyTransferStarted) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EnergyTransferId != 0 {
		n += 1 + sovTx(uint64(m.EnergyTransferId))
	}
	l = len(m.ChargerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Info)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEnergyTransferStartedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEnergyTransferCompleted) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EnergyTransferId != 0 {
		n += 1 + sovTx(uint64(m.EnergyTransferId))
	}
	l = len(m.ChargerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.UsedServiceUnits != 0 {
		n += 1 + sovTx(uint64(m.UsedServiceUnits))
	}
	l = len(m.Info)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEnergyTransferCompletedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCancelEnergyTransfer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EnergyTransferId != 0 {
		n += 1 + sovTx(uint64(m.EnergyTransferId))
	}
	l = len(m.ChargerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ErrorInfo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ErrorCode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCancelEnergyTransferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveEnergyOffer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgRemoveEnergyOfferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveTransfer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgRemoveTransferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgPublishEnergyTransferOffer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPublishEnergyTransferOffer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPublishEnergyTransferOffer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChargerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChargerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tariff", wireType)
			}
			m.Tariff = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Tariff |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Location == nil {
				m.Location = &Location{}
			}
			if err := m.Location.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlugType", wireType)
			}
			m.PlugType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlugType |= PlugType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPublishEnergyTransferOfferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPublishEnergyTransferOfferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPublishEnergyTransferOfferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStartEnergyTransfer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStartEnergyTransfer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStartEnergyTransfer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnergyTransferOfferId", wireType)
			}
			m.EnergyTransferOfferId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EnergyTransferOfferId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChargerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChargerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAccountAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAccountAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OfferedTariff", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OfferedTariff = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Collateral", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Collateral == nil {
				m.Collateral = &types.Coin{}
			}
			if err := m.Collateral.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnergyToTransfer", wireType)
			}
			m.EnergyToTransfer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EnergyToTransfer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStartEnergyTransferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStartEnergyTransferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStartEnergyTransferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEnergyTransferStarted) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEnergyTransferStarted: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEnergyTransferStarted: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnergyTransferId", wireType)
			}
			m.EnergyTransferId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EnergyTransferId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChargerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChargerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Info = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEnergyTransferStartedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEnergyTransferStartedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEnergyTransferStartedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEnergyTransferCompleted) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEnergyTransferCompleted: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEnergyTransferCompleted: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnergyTransferId", wireType)
			}
			m.EnergyTransferId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EnergyTransferId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChargerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChargerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UsedServiceUnits", wireType)
			}
			m.UsedServiceUnits = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UsedServiceUnits |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Info = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEnergyTransferCompletedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEnergyTransferCompletedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEnergyTransferCompletedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelEnergyTransfer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelEnergyTransfer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelEnergyTransfer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnergyTransferId", wireType)
			}
			m.EnergyTransferId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EnergyTransferId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChargerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChargerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorInfo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrorInfo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrorCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelEnergyTransferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelEnergyTransferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelEnergyTransferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveEnergyOffer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveEnergyOffer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveEnergyOffer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveEnergyOfferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveEnergyOfferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveEnergyOfferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveTransfer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveTransfer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveTransfer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveTransferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveTransferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveTransferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
