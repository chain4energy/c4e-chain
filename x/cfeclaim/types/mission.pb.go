// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: c4echain/cfeclaim/mission.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MissionType int32

const (
	MissionType_MISSION_TYPE_UNSPECIFIED MissionType = 0
	MissionType_INITIAL_CLAIM            MissionType = 1
	MissionType_DELEGATE                 MissionType = 2
	MissionType_VOTE                     MissionType = 3
	MissionType_CLAIM                    MissionType = 4
)

var MissionType_name = map[int32]string{
	0: "MISSION_TYPE_UNSPECIFIED",
	1: "INITIAL_CLAIM",
	2: "DELEGATE",
	3: "VOTE",
	4: "CLAIM",
}

var MissionType_value = map[string]int32{
	"MISSION_TYPE_UNSPECIFIED": 0,
	"INITIAL_CLAIM":            1,
	"DELEGATE":                 2,
	"VOTE":                     3,
	"CLAIM":                    4,
}

func (x MissionType) String() string {
	return proto.EnumName(MissionType_name, int32(x))
}

func (MissionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_95ac17080341cc2c, []int{0}
}

type Mission struct {
	Id             uint64                                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CampaignId     uint64                                 `protobuf:"varint,2,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	Name           string                                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	MissionType    MissionType                            `protobuf:"varint,5,opt,name=missionType,proto3,enum=chain4energy.c4echain.cfeclaim.MissionType" json:"missionType,omitempty"`
	Weight         github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,6,opt,name=weight,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"weight"`
	ClaimStartDate *time.Time                             `protobuf:"bytes,7,opt,name=claim_start_date,json=claimStartDate,proto3,stdtime" json:"claim_start_date,omitempty"`
}

func (m *Mission) Reset()         { *m = Mission{} }
func (m *Mission) String() string { return proto.CompactTextString(m) }
func (*Mission) ProtoMessage()    {}
func (*Mission) Descriptor() ([]byte, []int) {
	return fileDescriptor_95ac17080341cc2c, []int{0}
}
func (m *Mission) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Mission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Mission.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Mission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mission.Merge(m, src)
}
func (m *Mission) XXX_Size() int {
	return m.Size()
}
func (m *Mission) XXX_DiscardUnknown() {
	xxx_messageInfo_Mission.DiscardUnknown(m)
}

var xxx_messageInfo_Mission proto.InternalMessageInfo

func (m *Mission) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Mission) GetCampaignId() uint64 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

func (m *Mission) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Mission) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Mission) GetMissionType() MissionType {
	if m != nil {
		return m.MissionType
	}
	return MissionType_MISSION_TYPE_UNSPECIFIED
}

func (m *Mission) GetClaimStartDate() *time.Time {
	if m != nil {
		return m.ClaimStartDate
	}
	return nil
}

func init() {
	proto.RegisterEnum("chain4energy.c4echain.cfeclaim.MissionType", MissionType_name, MissionType_value)
	proto.RegisterType((*Mission)(nil), "chain4energy.c4echain.cfeclaim.Mission")
}

func init() { proto.RegisterFile("c4echain/cfeclaim/mission.proto", fileDescriptor_95ac17080341cc2c) }

var fileDescriptor_95ac17080341cc2c = []byte{
	// 458 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0x6a, 0xdb, 0x40,
	0x10, 0x86, 0xbd, 0x8e, 0xe3, 0x38, 0xab, 0xd6, 0xa8, 0x4b, 0x0f, 0xc2, 0x14, 0x49, 0xf4, 0x50,
	0x4c, 0x4b, 0x56, 0xe0, 0xfa, 0x05, 0xec, 0x58, 0x29, 0x02, 0xcb, 0x09, 0xb2, 0x5a, 0x68, 0x2f,
	0x62, 0xbd, 0xda, 0xc8, 0x4b, 0x23, 0xad, 0xb0, 0x36, 0xb4, 0x7e, 0x8b, 0x3c, 0x96, 0x8f, 0xb9,
	0xb5, 0xf4, 0xe0, 0x16, 0xfb, 0x45, 0x8a, 0x57, 0x16, 0xd1, 0x29, 0x27, 0x8d, 0x66, 0xfe, 0x8f,
	0xd9, 0xff, 0x67, 0xa0, 0x45, 0x87, 0x8c, 0x2e, 0x09, 0xcf, 0x1c, 0x7a, 0xcb, 0xe8, 0x1d, 0xe1,
	0xa9, 0x93, 0xf2, 0xa2, 0xe0, 0x22, 0xc3, 0xf9, 0x4a, 0x48, 0x81, 0x4c, 0x35, 0x1d, 0xb2, 0x8c,
	0xad, 0x92, 0x35, 0xae, 0xd4, 0xb8, 0x52, 0xf7, 0x5e, 0x27, 0x22, 0x11, 0x4a, 0xea, 0x1c, 0xaa,
	0x92, 0xea, 0x59, 0x89, 0x10, 0xc9, 0x1d, 0x73, 0xd4, 0xdf, 0xe2, 0xfe, 0xd6, 0x91, 0x3c, 0x65,
	0x85, 0x24, 0x69, 0x5e, 0x0a, 0xde, 0xfe, 0x6a, 0xc2, 0x33, 0xbf, 0x5c, 0x84, 0xba, 0xb0, 0xc9,
	0x63, 0x03, 0xd8, 0xa0, 0xdf, 0x0a, 0x9a, 0x3c, 0x46, 0x16, 0xd4, 0x28, 0x49, 0x73, 0xc2, 0x93,
	0x2c, 0xe2, 0xb1, 0xd1, 0x54, 0x03, 0x58, 0xb5, 0xbc, 0x18, 0x21, 0xd8, 0xca, 0x48, 0xca, 0x8c,
	0x13, 0x1b, 0xf4, 0xcf, 0x03, 0x55, 0x23, 0x1b, 0x6a, 0x31, 0x2b, 0xe8, 0x8a, 0xe7, 0x92, 0x8b,
	0xcc, 0x68, 0xa9, 0x51, 0xbd, 0x85, 0x7c, 0xa8, 0x1d, 0xad, 0x85, 0xeb, 0x9c, 0x19, 0xa7, 0x36,
	0xe8, 0x77, 0x07, 0x1f, 0xf0, 0xf3, 0xfe, 0xb0, 0xff, 0x84, 0x04, 0x75, 0x1e, 0x5d, 0xc1, 0xf6,
	0x0f, 0xc6, 0x93, 0xa5, 0x34, 0xda, 0x87, 0x5d, 0x63, 0xbc, 0xd9, 0x5a, 0x8d, 0x3f, 0x5b, 0xeb,
	0x5d, 0xc2, 0xe5, 0xf2, 0x7e, 0x81, 0xa9, 0x48, 0x1d, 0x2a, 0x8a, 0x54, 0x14, 0xc7, 0xcf, 0x45,
	0x11, 0x7f, 0x77, 0xe4, 0x3a, 0x67, 0x05, 0x9e, 0x30, 0x1a, 0x1c, 0x69, 0x34, 0x83, 0xba, 0xda,
	0x14, 0x15, 0x92, 0xac, 0x64, 0x14, 0x13, 0xc9, 0x8c, 0x33, 0x1b, 0xf4, 0xb5, 0x41, 0x0f, 0x97,
	0x29, 0xe2, 0x2a, 0x45, 0x1c, 0x56, 0x29, 0x8e, 0x3b, 0x9b, 0xad, 0x05, 0x1e, 0xfe, 0x5a, 0x20,
	0xe8, 0x2a, 0x7a, 0x7e, 0x80, 0x27, 0x44, 0xb2, 0xf7, 0x04, 0x6a, 0xb5, 0x37, 0xa3, 0x37, 0xd0,
	0xf0, 0xbd, 0xf9, 0xdc, 0xbb, 0x9e, 0x45, 0xe1, 0xd7, 0x1b, 0x37, 0xfa, 0x3c, 0x9b, 0xdf, 0xb8,
	0x97, 0xde, 0x95, 0xe7, 0x4e, 0xf4, 0x06, 0x7a, 0x05, 0x5f, 0x7a, 0x33, 0x2f, 0xf4, 0x46, 0xd3,
	0xe8, 0x72, 0x3a, 0xf2, 0x7c, 0x1d, 0xa0, 0x17, 0xb0, 0x33, 0x71, 0xa7, 0xee, 0xa7, 0x51, 0xe8,
	0xea, 0x4d, 0xd4, 0x81, 0xad, 0x2f, 0xd7, 0xa1, 0xab, 0x9f, 0xa0, 0x73, 0x78, 0x5a, 0x4a, 0x5a,
	0xe3, 0xe9, 0x66, 0x67, 0x82, 0xc7, 0x9d, 0x09, 0xfe, 0xed, 0x4c, 0xf0, 0xb0, 0x37, 0x1b, 0x8f,
	0x7b, 0xb3, 0xf1, 0x7b, 0x6f, 0x36, 0xbe, 0x0d, 0xea, 0xe6, 0x6b, 0xc1, 0x3a, 0x74, 0xc8, 0x2e,
	0xca, 0x3b, 0xfb, 0xf9, 0x74, 0x69, 0x2a, 0x8c, 0x45, 0x5b, 0xd9, 0xfb, 0xf8, 0x3f, 0x00, 0x00,
	0xff, 0xff, 0x4d, 0x15, 0x1b, 0x55, 0x8b, 0x02, 0x00, 0x00,
}

func (m *Mission) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Mission) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Mission) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ClaimStartDate != nil {
		n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.ClaimStartDate, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.ClaimStartDate):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintMission(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x3a
	}
	{
		size := m.Weight.Size()
		i -= size
		if _, err := m.Weight.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMission(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	if m.MissionType != 0 {
		i = encodeVarintMission(dAtA, i, uint64(m.MissionType))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintMission(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintMission(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CampaignId != 0 {
		i = encodeVarintMission(dAtA, i, uint64(m.CampaignId))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintMission(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintMission(dAtA []byte, offset int, v uint64) int {
	offset -= sovMission(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Mission) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovMission(uint64(m.Id))
	}
	if m.CampaignId != 0 {
		n += 1 + sovMission(uint64(m.CampaignId))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovMission(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovMission(uint64(l))
	}
	if m.MissionType != 0 {
		n += 1 + sovMission(uint64(m.MissionType))
	}
	l = m.Weight.Size()
	n += 1 + l + sovMission(uint64(l))
	if m.ClaimStartDate != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.ClaimStartDate)
		n += 1 + l + sovMission(uint64(l))
	}
	return n
}

func sovMission(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMission(x uint64) (n int) {
	return sovMission(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Mission) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMission
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Mission: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Mission: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampaignId", wireType)
			}
			m.CampaignId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampaignId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMission
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMission
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMission
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMission
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MissionType", wireType)
			}
			m.MissionType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MissionType |= MissionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMission
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMission
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Weight.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClaimStartDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMission
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMission
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ClaimStartDate == nil {
				m.ClaimStartDate = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.ClaimStartDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMission(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMission
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMission(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMission
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMission
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMission
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMission
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMission
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMission
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMission        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMission          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMission = fmt.Errorf("proto: unexpected end of group")
)
